% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{blas02}
\BIBentryALTinterwordspacing
L.~S. Blackford, A.~Petitet \emph{et~al.}, ``An updated set of basic linear
  algebra subprograms (blas),'' \emph{ACM Trans. Math. Softw.}, vol.~28, no.~2,
  p. 135–151, June 2002. [Online]. Available:
  \url{https://doi.org/10.1145/567806.567807}
\BIBentrySTDinterwordspacing

\bibitem{blast}
J.~Dongarra, ``Basic linear algebra subprograms technical ({BLAST}) forum
  standard ii,'' \emph{IJHPCA}, vol.~16, pp. 1--111, 05 2002.

\bibitem{flocq}
S.~Boldo and G.~Melquiond, ``Flocq: A unified library for proving
  floating-point algorithms in {Coq},'' in \emph{2011 IEEE 20th Symposium on
  Computer Arithmetic}, 2011, pp. 243--252.

\bibitem{IEEEstd}
``{IEEE} standard for floating-point arithmetic,'' \emph{IEEE Std 754-2019
  (Revision of IEEE 754-2008)}, pp. 1--84, 2019.

\bibitem{demmel_book}
J.~W. Demmel, \emph{Applied Numerical Linear Algebra}.\hskip 1em plus 0.5em
  minus 0.4em\relax USA: Society for Industrial and Applied Mathematics, 1997.

\bibitem{higham_book}
N.~J. Higham, \emph{Accuracy and Stability of Numerical Algorithms},
  2nd~ed.\hskip 1em plus 0.5em minus 0.4em\relax Society for Industrial and
  Applied Mathematics, 2002.

\bibitem{hauser96}
\BIBentryALTinterwordspacing
J.~R. Hauser, ``Handling floating-point exceptions in numeric programs,''
  \emph{ACM Trans. Program. Lang. Syst.}, vol.~18, no.~2, p. 139–174, Mar.
  1996. [Online]. Available: \url{https://doi.org/10.1145/227699.227701}
\BIBentrySTDinterwordspacing

\bibitem{blas02_mixed}
\BIBentryALTinterwordspacing
X.~S. Li, J.~W. Demmel, D.~H. Bailey, G.~Henry, Y.~Hida, J.~Iskandar, W.~Kahan,
  S.~Y. Kang, A.~Kapur, M.~C. Martin, B.~J. Thompson, T.~Tung, and D.~J. Yoo,
  ``Design, implementation and testing of extended and mixed precision
  {BLAS},'' \emph{ACM Trans. Math. Softw.}, vol.~28, no.~2, p. 152–205, Jun.
  2002. [Online]. Available: \url{https://doi.org/10.1145/567806.567808}
\BIBentrySTDinterwordspacing

\bibitem{stewart_book}
G.~W. Stewart, \emph{Matrix Algorithms}.\hskip 1em plus 0.5em minus 0.4em\relax
  Society for Industrial and Applied Mathematics, 1998.

\bibitem{vcfloat1}
\BIBentryALTinterwordspacing
T.~Ramananandro, P.~Mountcastle, B.~Meister, and R.~Lethin, ``A unified coq
  framework for verifying c programs with floating-point computations,'' in
  \emph{Proceedings of the 5th ACM SIGPLAN Conference on Certified Programs and
  Proofs}, ser. CPP 2016.\hskip 1em plus 0.5em minus 0.4em\relax New York, NY,
  USA: Association for Computing Machinery, 2016, p. 15–26. [Online].
  Available: \url{https://doi.org/10.1145/2854065.2854066}
\BIBentrySTDinterwordspacing

\bibitem{vcfloat2}
\BIBentryALTinterwordspacing
A.~W. Appel and A.~E. Kellison, ``{VCFloat2}: Floating-point error analysis in
  {Coq},'' 2022. [Online]. Available:
  \url{https://github.com/VeriNum/vcfloat/blob/master/doc/vcfloat2.pdf}
\BIBentrySTDinterwordspacing

\bibitem{mathcomp}
\BIBentryALTinterwordspacing
A.~Mahboubi and E.~Tassi, \emph{Mathematical Components}.\hskip 1em plus 0.5em
  minus 0.4em\relax Zenodo, Sep. 2022. [Online]. Available:
  \url{https://doi.org/10.5281/zenodo.7118596}
\BIBentrySTDinterwordspacing

\bibitem{cohen2022}
\BIBentryALTinterwordspacing
J.~M. Cohen, Q.~Wang, and A.~W. Appel, ``Verified erasure correction in {Coq}
  with {MathComp} and {VST},'' in \emph{Computer Aided Verification: 34th
  International Conference, CAV 2022, Haifa, Israel, August 7–10, 2022,
  Proceedings, Part II}, Berlin, Heidelberg, 2022, p. 272–292. [Online].
  Available: \url{https://doi.org/10.1007/978-3-031-13188-2_14}
\BIBentrySTDinterwordspacing

\bibitem{bigops}
Y.~Bertot, G.~Gonthier, S.~Ould~Biha, and I.~Pasca, ``Canonical big
  operators,'' in \emph{Theorem Proving in Higher Order Logics}, O.~A. Mohamed,
  C.~Mu{\~{n}}oz, and S.~Tahar, Eds.\hskip 1em plus 0.5em minus 0.4em\relax
  Berlin, Heidelberg: Springer Berlin Heidelberg, 2008, pp. 86--101.

\bibitem{barret94:templates}
R.~Barrett, M.~Berry, T.~F. Chan, J.~Demmel, J.~Donato, J.~Dongarra,
  V.~Eijkhout, R.~Pozo, C.~Romine, and H.~van~der Vorst, \emph{Templates for
  the Solution of Linear Systems: Building Blocks for Iterative Methods}.\hskip
  1em plus 0.5em minus 0.4em\relax SIAM, 1994.

\bibitem{vst-floyd}
Q.~Cao, L.~Beringer, S.~Gruetter, J.~Dodds, and A.~W. Appel, ``{VST-Floyd}: A
  separation logic tool to verify correctness of {C} programs,'' \emph{J.
  Autom. Reason.}, vol.~61, no. 1-4, pp. 367--422, Jun. 2018.

\bibitem{sozeau09:rewriting}
M.~Sozeau, ``A new look at generalized rewriting in type theory,'' in \emph{1st
  Coq Workshop Proceedings}, H.~Herbelin, Ed.\hskip 1em plus 0.5em minus
  0.4em\relax Technische Universitaet Muenchen, Aug. 2009.

\bibitem{gappa2008}
S.~Boldo, J.-C. Filli{\^a}tre, and G.~Melquiond, ``Combining {Coq} and {Gappa}
  for certifying floating-point programs,'' in \emph{International Conference
  on Intelligent Computer Mathematics}.\hskip 1em plus 0.5em minus 0.4em\relax
  Springer, 2009, pp. 59--74.

\bibitem{precisa2017}
M.~M. Moscato, L.~Titolo, A.~Dutle, and C.~A. Mu{\~{n}}oz, ``Automatic
  estimation of verified floating-point round-off errors via static analysis,''
  in \emph{Computer Safety, Reliability, and Security - 36th International
  Conference, {SAFECOMP'17}}, 2017, pp. 213--229.

\bibitem{pvs}
S.~Owre, J.~M. Rushby, and N.~Shankar, ``Pvs: A prototype verification
  system,'' in \emph{Automated Deduction---CADE-11}, D.~Kapur, Ed.\hskip 1em
  plus 0.5em minus 0.4em\relax Berlin, Heidelberg: Springer Berlin Heidelberg,
  1992, pp. 748--752.

\bibitem{fptaylor2018}
A.~Solovyev, M.~S. Baranowski, I.~Briggs, C.~Jacobsen, Z.~Rakamari{\'c}, and
  G.~Gopalakrishnan, ``Rigorous estimation of floating-point round-off errors
  with symbolic {T}aylor expansions,'' \emph{ACM Transactions on Programming
  Languages and Systems}, vol.~41, no.~1, pp. 1--39, 2018.

\bibitem{daisy2018}
E.~Darulova, A.~Izycheva, F.~Nasir, F.~Ritter, H.~Becker, and R.~Bastian,
  ``Daisy - framework for analysis and optimization of numerical programs (tool
  paper),'' in \emph{Tools and Algorithms for the Construction and Analysis of
  Systems}, D.~Beyer and M.~Huisman, Eds.\hskip 1em plus 0.5em minus
  0.4em\relax Cham: Springer International Publishing, 2018, pp. 270--287.

\bibitem{flover2018}
H.~Becker, N.~Zyuzin, R.~Monat, E.~Darulova, M.~O. Myreen, and A.~Fox, ``A
  verified certificate checker for finite-precision error bounds in coq and
  hol4,'' in \emph{2018 Formal Methods in Computer Aided Design (FMCAD)}, 2018,
  pp. 1--10.

\bibitem{roux_15}
\BIBentryALTinterwordspacing
P.~Roux, ``{Formal Proofs of Rounding Error Bounds},'' \emph{{Journal of
  Automated Reasoning}}, p.~23, 2015. [Online]. Available:
  \url{https://hal.science/hal-01091189}
\BIBentrySTDinterwordspacing

\bibitem{boldo2014}
S.~Boldo, F.~Clément, J.-C. Filliâtre, M.~Mayero, G.~Melquiond, and P.~Weis,
  ``Trusting computations: A mechanized proof from partial differential
  equations to actual program,'' \emph{Computers and Mathematics with
  Applications}, vol.~68, no.~3, pp. 325--352, 2014.

\bibitem{kellison2022}
A.~E. Kellison and A.~W. Appel, ``Verified numerical methods for ordinary
  differential equations,'' in \emph{15th Int'l Workshop on Numerical Software
  Verification}, 2022.

\bibitem{automatedBEA}
\BIBentryALTinterwordspacing
Z.~Fu, Z.~Bai, and Z.~Su, ``Automated backward error analysis for numerical
  code,'' \emph{SIGPLAN Not.}, vol.~50, no.~10, p. 639–654, oct 2015.
  [Online]. Available: \url{https://doi.org/10.1145/2858965.2814317}
\BIBentrySTDinterwordspacing

\end{thebibliography}
